console.log("registering service worker");

const API_URL =
  "https://52d1-2600-1700-466a-4780-948c-e4ec-5a2-6e8c.ngrok-free.app";

// Register a Service Worker.
navigator.serviceWorker.register("/service-worker.js");

document.getElementById("permission").onclick = function () {
  navigator.serviceWorker.ready
    .then(function (registration) {
      // Use the PushManager to get the user's subscription to the push service.
      return registration.pushManager
        .getSubscription()
        .then(async function (subscription) {
          // If a subscription was found, return it.
          if (subscription) {
            console.log("subscription was found");
            return subscription;
          }

          console.log("subscription not found");

          // Get the server's public key
          const response = await fetch(`${API_URL}/vapidPublicKey`, {
            headers: { "ngrok-skip-browser-warning": true },
          });

          const vapidPublicKey = await response.text();

          // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet
          // urlBase64ToUint8Array() is defined in /tools.js
          const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey);

          // Otherwise, subscribe the user (userVisibleOnly allows to specify that we don't plan to
          // send notifications that don't have a visible effect for the user).
          return registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: convertedVapidKey,
          });
        });
    })
    .then(function (subscription) {
      // Send the subscription details to the server using the Fetch API.'
      // TODO: Only call this API if there's a new subscription
      fetch(`${API_URL}/register`, {
        method: "post",
        headers: {
          "Content-type": "application/json",
          "ngrok-skip-browser-warning": true,
        },
        body: JSON.stringify({
          subscription: subscription,
        }),
      });

      document.getElementById("sendPush").onclick = function () {
        const payload = "Come check out our free prime games for April!";
        const delay = 0;
        const ttl = 0;

        // Ask the server to send the client a notification (for testing purposes, in actual
        // applications the push notification is likely going to be generated by some event
        // in the server).
        fetch(`${API_URL}/sendNotification`, {
          method: "post",
          headers: {
            "Content-type": "application/json",
            "ngrok-skip-browser-warning": true,
          },
          body: JSON.stringify({
            subscription: subscription,
            payload: payload,
            delay: delay,
            ttl: ttl,
          }),
        });
      };
    })
    .catch(function (err) {
      console.log(err);
      alert(err.message);
    });
};

document.getElementById("addToIDB").onclick = function () {
  if ("serviceWorker" in navigator && navigator.serviceWorker.controller) {
    navigator.serviceWorker.controller.postMessage({
      type: "ADD_TO_IDB",
      data: "newName",
    });
  }
};

document.getElementById("getFromIDB").onclick = function () {
  if ("serviceWorker" in navigator && navigator.serviceWorker.controller) {
    navigator.serviceWorker.controller.postMessage({
      type: "GET_FROM_IDB",
      data: "name",
    });
  }
};

document.getElementById("addToCache").onclick = function () {
  if ("serviceWorker" in navigator && navigator.serviceWorker.controller) {
    navigator.serviceWorker.controller.postMessage({
      type: "INITIATE_CACHE",
    });
  }
};
